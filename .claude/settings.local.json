{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(npm test)",
      "Bash(npx hardhat:*)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(-e 's|// 获取区块数据|// Get blocks data|g' )",
      "Bash(-e 's|// 获取事件数据|// Get events data|g' )",
      "Bash(-e 's|// 使用模拟数据|// Use mock data|g' )",
      "Bash(-e 's|// 使用模拟区块数据|// Use mock blocks data|g' )",
      "Bash(-e 's|// 使用模拟事件数据|// Use mock events data|g' )",
      "Bash(-e 's|// 设置模拟统计数据|// Set mock statistics data|g' )",
      "Bash(-e 's|// 初始加载和刷新数据|// Initial load and refresh data|g' )",
      "Bash(-e 's|// 设置定期刷新|// Set periodic refresh|g' )",
      "Bash(-e 's|// 处理标签页变化|// Handle tab change|g' )",
      "Bash(-e 's|// 处理页面变化|// Handle page change|g' )",
      "Bash(-e 's|// 处理每页行数变化|// Handle rows per page change|g' )",
      "Bash(-e 's|// 处理搜索|// Handle search|g' )",
      "Bash(-e 's|// 处理交易点击|// Handle transaction click|g' )",
      "Bash(-e 's|// 处理区块点击|// Handle block click|g' )",
      "Bash(-e 's|// 过滤交易|// Filter transactions|g' )",
      "Bash(-e 's|// 格式化时间戳|// Format timestamp|g' )",
      "Bash(-e 's|// 渲染交易表格|// Render transactions table|g' )",
      "Bash(-e 's|// 渲染区块表格|// Render blocks table|g' )",
      "Bash(-e 's|// 渲染事件表格|// Render events table|g' )",
      "Bash(-e 's|// 渲染区块链统计卡片|// Render blockchain stats cards|g' )",
      "Bash(/Users/minfeng/Desktop/llm-blockchain/code/frontend/src/components/BlockchainExplorer.js)",
      "Bash(npm start)",
      "Bash(npx eslint:*)",
      "Bash(touch:*)",
      "Bash(mv:*)",
      "Bash(pip show:*)",
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Bash(curl:*)",
      "Bash(npm uninstall:*)",
      "Bash(npx kill-port:*)",
      "Bash(pkill:*)",
      "Bash(cp:*)",
      "Bash(ipfs:*)",
      "Bash(brew upgrade:*)",
      "Bash(./start_dev.sh:*)",
      "Bash(nvm install:*)",
      "Bash(nvm use:*)",
      "Bash(true)",
      "Bash(kill:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git config:*)",
      "Bash(gh auth:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(pip --version)",
      "Bash(echo \"📍 检查项目根目录Python依赖...\" pip list)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(for dir in \"backend\" \"frontend\" \"contracts-clean\" \"agents\")",
      "Bash(do)",
      "Bash(if [ -d \"$dir\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(for file in \"backend/main.py\" \"frontend/package.json\" \"requirements.txt\" \".env.example\")",
      "Bash(if [ -f \"$file\" ])",
      "Bash(for file in \"backend/main.py\" \"frontend/package.json\" \"requirements.txt\" \".env.example\" \".env\")",
      "Bash(chmod:*)",
      "Bash(git checkout:*)",
      "Bash(./scripts/start_system.sh:*)",
      "Bash(./scripts/stop_system.sh:*)",
      "Bash(scripts/auto_deploy.py:*)",
      "Bash(rm:*)",
      "Bash(pip3 install:*)",
      "Bash(backend/venv/bin/python test_agent_registration.py:*)",
      "Bash(git restore:*)",
      "Bash(./stop_backend.sh:*)",
      "Bash(./start_backend.sh:*)",
      "Bash(open:*)",
      "Bash(cd:*)",
      "Bash(./start_backend_external_ganache.sh:*)",
      "Bash(./quick_setup.sh:*)"
    ],
    "deny": []
  }
}